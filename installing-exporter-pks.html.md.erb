---
title: Installing Healthwatch Exporter for PKS
owner: Healthwatch
---

This topic describes how to install and configure Healthwatch Exporter for Pivotal
Container Service (PKS).

## Install Healthwatch Exporter for PKS

1. Download the Healthwatch Exporter for TAS product file from [Healthwatch](https://network.pivotal.io/products/p-healthwatch/).

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file.

1. Under the **Import a Product** button, click **+** next to the version number of Healthwatch Exporter for PKS.
This adds the tile to your staging area.

<div class="note">
    <strong>Note: </strong>
    Installing using Platform Automation
    by following config file for the <code>download-product</code>
    task will work to fetch the Healthwatch Exporter for PKS tile
    without getting Healthwatch or the TAS exporter:

<pre>
---
pivnet-api-token: token
pivnet-file-glob: "Healthwatch-pks-*.pivotal"
pivnet-product-slug: p-healthwatch
product-version-regex: "0.4.*"
</pre>
</div>

##  Configure the Healthwatch Tile

To configure the Healthwatch Exporter for PKS tile, perform the following steps:

1. Click the **Healthwatch Exporter for PKS** tile on the Ops Manager Installation Dashboard.
1. Navigate to **Assign AZs and Networks** and do the following:
    1. Select an Availability Zone (AZ) for placing singleton jobs.
    1. Select one or more AZs for balancing other jobs.
    1. Select **Network** for installing Healthwatch.
    1. Click **Save**.

1. *(Optional)* The exporter is defaulted to listen on port `9090`, to change, edit the value in the
   **PKS Exporter Configuration** section.

<p class="note">
    <strong>Note: </strong>
    Metric Sources

    <br/><br/>

    The Healthwatch PKS Exporter retrieves metrics from the
    <a href="https://github.com/cloudfoundry/bosh-system-metrics-server-release">
        Bosh System Metrics Server
    </a>.
    This includes all of the typical Bosh metrics.
    Examples of such metrics can be found here:
    <a href="https://docs.pivotal.io/pivotalcf/2-6/monitoring/kpi.html#bosh">
        System (BOSH) metrics
    </a>.
</p>

## Troubleshooting

It is possible to follow all the steps above
and have PKS Cluster Discovery fail with the following error:

```
2020-05-20 19:24:02 ERROR k8s.K8sClient [parallel-1] Failed to make request
java.net.UnknownHostException: CLUSTER-NAME.ENVIRONMENT-DOMAIN
```

Where:
* `CLUSTER-NAME` is the name of the cluster you created
* `ENVIRONMENT-DOMAIN` is the domain you have set up for your PKS foundation

In this case, you'll need to set up a DNS record for accessing your cluster from the web.
The DNS record will be a type A record
with the IP of the cluster's master node set as the **IPv4 Address**.
You can set the Time To Live (**TTL**) to whatever you desire,
but on our test environments we make it as short as possible (one second)
so we can hopefully see cluster discovery up and running as fast as possible.

##  (Optional) Scraping PKS Exporter Metrics

If you would like to scrape the PKS Exporter from off the foundation (for example, if you have installed a Prometheus
off of the foundation or are using the Healthwatch on the [Control Plane](../using.md))
then you will need to open network paths from the Prometheus to the PKS Exporter VMs.  Instructions for doing so will differ
depending on the IAAS being used.  In general, all that is needed is connectivity from the Prometheus VM to the Exporter VMs
over TCP to the configured PKS Exporter Scrape Port (defaulted to 9090).
