---
title: Healthwatch
owner: Healthwatch
---

<p class="note warning">
    <strong>Warning:</strong>
    The Healthwatch tiles are currently in beta
    and are intended for evaluation and test purposes only.
    Do not use this product in a production environment.
</p>

Healthwatch is currently in closed beta.
To ask questions or report an issue, contact your primary VMware contact.
For information about new features and breaking changes, see [Healthwatch Release Notes](release-notes.html).


## <a id='overview'></a> Overview

The Healthwatch tile consists of a time series database (TSDB), Grafana, and MySQL.
In the Healthwatch tile, metrics can be stored and visualized.

The Healthwatch Exporter for Tanzu Application Service (TAS for VMs) connects to the
Loggregator RLP endpoint and funnels the metrics to a TSDB exposition endpoint.

You can find both of these tiles on the [Healthwatch](https://network.pivotal.io/products/p-healthwatch)
page on VMware Tanzu Network.

While you must install the exporter on the foundation you want to monitor,
you can install the Healthwatch tile on the same foundation or on a different foundation,
depending on your desired monitoring configuration.
For more information about possible configurations, see [Using Healthwatch](using.html).


## <a id='architecture'></a> Architecture

The following diagram shows how Healthwatch and its exporters are commonly deployed for
multi-foundation monitoring:

![a diagram representing the relationship between a control plane and the foundations that federate to it](images/ControlPlaneArchitecture.png)


## <a id='healthwatch'></a> Healthwatch Tile

The Healthwatch tile installs three components: TSDB, Grafana, and MySQL.
MySQL is used only to store the Grafana settings and does not store any time series data.

You can deploy the Healthwatch tile in high availability (HA) mode
with three MySQL nodes and two MySQL Proxy nodes,
or in non-HA mode with one MySQL node and one MySQL Proxy node.
You can also scale Grafana horizontally beyond the default single VM.
You can scale TSDB vertically but should not scale it horizontally.
An Nginx proxy is deployed in front of TSDB to authorize and encrypt metrics stored in TSDB.

![a diagram that shows how the TSDB, MySQL instance, and Nginx proxy relate to the Grafana instance](images/Healthwatch.png)


## <a id='healthwatch-tas'></a> Healthwatch Exporter for TAS for VMs

The Healthwatch Exporter for TAS for VMs installs up to three VMs.
Each VM processes a metric type from the Firehose: timer, gauge, or counter.
An operator can choose to deploy all three VMs or any subset thereof.
Metrics are then exposed on a secured endpoint in TSDB exposition format.
You can scale these VMs vertically but should not scale them horizontally.

![a diagram showing the three discrete VMs that the Healthwatch Exporter for TAS for VMs installs, which send timer, gauge, and counter metrics to the RLP endpoint](images/HealthwatchExporterforPAS.png)


## <a id='healthwatch-pks'></a> Healthwatch Exporter for PKS

The Healthwatch Exporter for PKS installs a single VM that collects health metrics from the BOSH Director.
This VM obtains health metrics through the Firehose similarly to TAS for VMs.
Metrics are then exposed on a secured endpoint in TSDB exposition format.
You can scale this VM vertically but should not scale it horizontally.

![a diagram showing the single VM that the Healthwatch Exporter for PKS installs, which collects metrics from the Bosh Director](images/HealthwatchExporterforPKS.png)

## Healthwatch FAQ
1. **Why is DNS important?**

    To avoid creating an unnecessary dependency on TAS,
    the Healthwatch 2.0 tile deployment does not use TAS's GoRouter
    to route the Grafana VM to a subdomain on the foundation.
    Therefore, for ease of access after setup, it is important
    to configure a [DNS route to the Grafana VM](common-configurations/dns-configuration.html).

1. **Why is IaaS configuration important?**

    The [IaaS Configuration page](common-configurations/iaas-configuration.html) documents
    the process of creating a firewall policy in each of the various IaaSes.
    Access to individual VMs is disabled by default, so this is necessary to allow external access to the operator.
    This allows external access to the Grafana VM so that it can be reached by the operator.
