---
title: Healthwatch
owner: Healthwatch
---

This topic provides an overview of Healthwatch features and functionality.

For information about new features and breaking changes, see [Healthwatch Release Notes](release-notes.html).


## <a id='overview'></a> Overview of Healthwatch

Healthwatch enables you to monitor metrics related to the functionality of your Ops Manager
platform.

A complete Healthwatch installation includes the Healthwatch tile, as well as at least one
Healthwatch Exporter tile. There are Healthwatch Exporter tiles for both the Tanzu Application
Service for VMs (TAS for VMs) and Tanzu Kubernetes Grid Integrated Edition (TKGI) runtimes.

You must install a Healthwatch Exporter tile on each Ops Manager foundation you want to monitor.
You can install the Healthwatch tile on the same foundation or on a different foundation, depending
on your desired monitoring configuration.

You can also configure the Healthwatch Exporter tiles to expose metrics to a service or database
located outside your Ops Manager foundation, such as an external time series database (TSDB)
or an installation of the Healthwatch tile on the TKGI Control Plane.

For a detailed explanation of the Healthwatch architecture, a list of open ports required for
each component, and possible configurations for monitoring metrics with Ops Manager or an external
service or database, see [Reference Architecture](architecture.html).

For more information about each of these tiles, see the following sections below:

* [Overview of the Healthwatch Tile](#healthwatch)
* [Overview of the Healthwatch Exporter for TAS for VMs Tile](#exporter-tas)
* [Overview of the Healthwatch Exporter for TKGI Tile](#exporter-tkgi)

### <a id='healthwatch'></a> Overview of the Healthwatch Tile

The **Healthwatch** tile gathers metrics across multiple Ops Manager foundations by scraping
them from Healthwatch Exporter tiles installed on each foundation.

Healthwatch deploys instances of Prometheus and Grafana. The Prometheus instance scrapes and
stores metrics from the Healthwatch Exporter tiles and enables you to configure alerts with
Alertmanager.

Healthwatch then exports the collected metrics to dashboards in the Grafana UI, enabling you
to visualize the data with charts and graphs and create customized dashboards for long-term
monitoring and troubleshooting.

Healthwatch includes the following features:

* **Prometheus:**
  * Scrapes `/metrics` endpoints for Healthwatch Exporter tiles, collecting metrics related
  to the functionality of platform- and runtime-level components that include the following:
      * Service level indicators (SLIs) for the BOSH Director
      * SLIs for TAS for VMs components
      * SLIs for TKGI components
      * When Ops Manager certificates are due to expire
      * Canary URL tests for TAS for VMs apps
      * Counter, gauge, and timer app logs for TAS for VMs from the Loggregator Firehose
      * BOSH system metrics for TKGI
      * VMs deployed by Healthwatch Exporter tiles
  * Stores metrics for up to six weeks
  * Can write to remote storage in addition to its local TSDB

* **Grafana:** Enables you to visualize the collected metrics data in charts and graphs, as
well as create customized dashboards for easier monitoring and troubleshooting

* **Alertmanager:** Manages and sends alerts according to the alerting rules you configure

### <a id='exporter-tas'></a> Overview of the Healthwatch Exporter for TAS for VMs Tile

The **Healthwatch Exporter for TAS for VMs** tile deploys metric exporter VMs to generate each
type of metric related to the health of your TAS for VMs deployment.

Healthwatch Exporter for TAS for VMs sends metrics through the Loggregator Firehose to a Prometheus
exposition endpoint on the associated metric exporter VMs. The Prometheus VM that exists within
your metrics monitoring system then scrapes the exposition endpoints on the metric exporter
VMs and imports those metrics into your monitoring system.

Healthwatch Exporter for TAS for VMs exposes the following metrics related to the functionality
of TAS for VMs components, TAS for VMs apps, and the Healthwatch Exporter for TAS for VMs tile:

* SLIs for TAS for VMs components
* Canary URL tests for TAS for VMs apps
* Counter, gauge, and timer app logs for TAS for VMs from the Loggregator Firehose
* Super Value Metrics (SVMs) from Healthwatch v1
* VMs deployed by Healthwatch Exporter for TAS for VM

### <a id='exporter-tkgi'></a> Overview of the Healthwatch Exporter for TKGI Tile

The **Healthwatch Exporter for TKGI** tile deploys metric exporter VMs to generate SLIs related
to the health of your TKGI deployment.

The Prometheus VM that exists within your metrics monitoring system then scrapes the Prometheus
exposition endpoints on the metric exporter VMs and imports those metrics into your monitoring
system.

Healthwatch Exporter for TKGI exposes the following metrics related to the functionality of
TKGI components and the Healthwatch Exporter for TKGI tile:

* SLIs for TKGI components
* BOSH system metrics for TKGI
* VMs deployed by Healthwatch Exporter for TKGI


## <a id='product-snapshot'></a> Product Snapshot

The following table provides version and version support information about Healthwatch:

| Element | Details |
| ------- | ------- |
| Version | v2.1 |
| Release date | March 18, 2021 |
| Compatible Ops Manager versions | v2.7, v2.8, v2.9, v2.10 |
| Compatible Pivotal Application Service (PAS) and TAS for VMs versions | v2.7, v2.8, v2.9, v2.10 |
| Compatible Enterprise Pivotal Container Service (Enterprise PKS) and TKGI versions | v1.8, v1.9, v1.10 |
| IaaS support | AWS, Azure, GCP, OpenStack, and vSphere |

## <a id='assumed-risks'></a>Assumed Risks of Using Healthwatch v2.0

The following list outlines the problems that could arise when using Healthwatch v2.0.

* Healthwatch 2.0 uses open source components, including Grafana, Prometheus, and Alertmanager. This means VMware does not have direct control over how quickly feature changes and bug fixes make it into these open source components.

* If your foundation is tailor-made to your organization, the default Healthwatch v2.0 dashboards in Grafana may not be relevant. To solve this, create custom dashboards in Grafana and adjust the default thresholds.

* If create a custom dashboard in Grafana, it will not be updated with future releases of Healthwatch. Similarly, if you edit one of the default dashboards generated by Healthwatch v2.0, it will revert to its default settings when you upgrade to the next release. 

* If someone who receives email alerts from Alertmanager leaves your company, the email alerts may bounce. This could cause your email server to disallow the SMTP server and prevent anyone from receiving email alerts.

* If any Healthwatch components go down during installation or upgrade, metrics may be missing for the period of time it took to install or upgrade Healthwatch v2.0. 
