---
title: Grafana Authentication
owner: Healthwatch
---

By default, Grafana is configured to use basic authentication
with username `admin` and a generated password
available in the **Credentials** pane of the **Healthwatch** tile
under **Grafana Login**.
OAuth is another supported authentication mechanism
and can be enabled for multiple OAuth providers (UAA, GitHub, etc).

<p class="note">
    <strong>Note:</strong>
    Grafana Authentication Documentation
    provides many ways to authenticate users.
    Some authentication integrations also enable syncing
    user permissions and org memberships.
    Visit
    <a href="https://grafana.com/docs/auth/overview/">Grafana Authentication</a>
    for more assistance.
</p>

## Configuring UAA OAuth
If you would like to specify UAA as your OAuth provider,
then select **UAA** as the authentication mechanism for Grafana
in the **Grafana Configuration** pane.
Below is an example configuration for UAA.

![a screenshot of the Grafana Configuration pane, specifically with the UAA authentication mechanism selected. The screenshot shows the Client ID field filled in with grafana, and the URL to UAA field filled in with https://uaa.sys.acme.cf-denver.com](../images/uaa.png)

Make sure to create a client for `grafana` with scopes
`openid,healthwatch.admin,healthwatch.edit,healthwatch.read`,
authorized grant type `authorization_code`,
and a redirect URI pointing at
`https://${ROOT_URL_FOR_GRAFANA}/login/generic_oauth`.

```bash
uaac client add grafana \
   --scope openid,healthwatch.admin,healthwatch.edit,healthwatch.read \
   --secret "$uper$ecret" \
   --authorities uaa.resource \
   --authorized_grant_types authorization_code \
   --redirect_uri http(s)://[GRAFANA ROOT URL]/login/generic_oauth
```

<p class="note">
    <strong>Note:</strong>
    Make sure the protocol (http/https) in the redirect uri
    matches the protocol you choose to use.
    If you provide the SSL certificate in Grafana Configuration
    or put a load balancer with SSL termination in from of the Grafana,
    you should use https.
    <code>GRAFANA ROOT URL</code>
    should include port as well.
</p>

## Configuring Generic OAuth
If you would like to configure
the supported OAuth provider of your choice,
then select **Generic OAuth** as the authentication mechanism for the UI
in the **Grafana Configuration** pane.
Below is an example configuration for GitHub.

![a screenshot of the Grafana Configuration pane, specifically with the Generic OAuth authentication mechanism selected. The screenshot shows the Name field filled in with GitHub, Client ID with an arbitrary string that represents the client ID you would actually get from GitHub, Scopes with user:email,read:org, Authorization URL with https://github.com/login/oauth/authorize, Token URL with https://github.com/login/oauth/access_token, API Url with https://api.github.com/user, Allow Sign Up checkbox checked, Team IDs with 42, and Allowed Organizations with acme](../images/github-oauth.png)

To get the GitHub team ID you would like to use for authentication,
you can run the following command.

```bash
curl --silent \
    --header "Authorization: bearer GITHUB-API-TOKEN" \
    https://api.github.com/orgs/acme/teams/GITHUB-TEAM-SLUG | \
    jq -r .id
```

Where:

* `GITHUB-API-TOKEN` is the API token that you got from GitHub.
* `GITHUB-TEAM-SLUG` is the last segment of the url in the browser
    when visiting the team's page through the GitHub website
    (ie. `https://github.com/orgs/acme/teams/GITHUB-TEAM-SLUG`)

When setting up the GitHub OAuth application,
you will need to set the **Authorization callback URL**
to `https://${GRAFANA_ROOT_URL}/login/generic_oauth`,
where `GRAFANA_ROOT_URL` is the root URL of your Grafana instance.

## Configuring LDAP Authentication
If you would like to specify LDAP as your provider,
then select **LDAP** as the authentication mechanism for Grafana
in the **Grafana Configuration** pane.
For individual field references,
see [Grafana LDAP Authentication](https://grafana.com/docs/auth/ldap/).
