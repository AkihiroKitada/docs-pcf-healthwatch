---
title: PCF Healthwatch v1.4 Release Notes
owner: PCF Healthwatch
---

##<a id='releases'></a>Releases

###<a id='v1.4.4'></a>v1.4.4

**Release Date: November 14, 2018**

##<a id='new'></a>New Features in v1.4

* Simplified category panels on dashboard, for quicker view of foundation health.
  - Smaller, uniform size panels.
  - Color shows current category status, derived from [configurable alerts](./api/alerts.html).
      - Red: Critical
      - Orange: Warning
      - Green: Healthy
      - Gray: Data unavailable
  - Non-status information moved to category detail pages that the user clicks into.

* Expanded alerts functionality:
  - Added live **Alert Stream** along right side of dashboard.
  - Added searchable **Alert History** page, covering the last 24 hours.
  - Graphs of metrics show alert events, where metrics cross alert thresholds.

For further information about the new dashboard in PCF Healthwatch 1.4, including the Alert Stream, please check out [Using PCF Healthwatch](https://docs.pivotal.io/pcf-healthwatch/1-4/using.html#dashboard-overview).

* Added new metrics:
  - [Number of Available Free Chunks of Disk](./metrics.html#free-disk-chunks), with corresponding alert [`Diego.AvailableFreeChunksDisk`](./api/alerts.html#defaults)
  - [Active Drain Count](https://docs.pivotal.io/pivotalcf/2-3/monitoring/key-cap-scaling.html#scalable-syslog-ksi), KSI from PCF v2.3 Syslog, is now graphed in the PCF Healthwatch UI under Logging. 

* **Syslog encryption**: Healthwatch VM log output to syslog can be encrypted with TLS.

* **Resource use**: Reduced number and scale of [VM resources](./resources.html) required to run PCF Heathwatch.

* **Internal database**: Switched internal database from MariaDB to Percona (see [Known Issues](#issues)).

* **Stack**: PCF Healthwatch uses cflinuxfs3 as the default stack when available.
  - When Healthwatch is installed in an environment that does not support cflinuxfs3, such as a PCF v2.2 environment, Healthwatch components run on the cflinuxfs2 stack.
* Maintenance update of the following dependencies: 
    - CF CLI now v6.40.1
    - Golang now v1.10.5
    - Flyway Command-line and Library now v5.2.1
    - OpenJDK now v1.8.0_192-b03
    - Spring now Brussels-SR14

##<a id='issues'></a>Known Issues

* Upgrading to Healthwatch v1.4 from v1.3 may stop supermetrics collection for about 15 minutes, while Healthwatch's internal database migrates from MariaDB to Percona. For more information, please refer to [Troubleshooting PCF Healthwatch](./troubleshooting.html)
* When using Healthwatch v1.4 with Pivotal Application Service (PAS) v2.4, the `Use "cf" as deployment name in emitted metrics instead of unique name` feature (found in Operations Manager under Pivotal Application Service > Settings > Advanced Features, or via `advanced_features.properties.enable_cf_metric_name`) must be checked/enabled in order for Healthwatch to correctly identify and distinguish between the CF deployment and Isolation Segments.
    * This checkbox is enabled by default when upgrading from PAS 2.3. It is disabled by default on clean installs of PAS 2.4.
* Pivotal Application Service (PAS) v2.4 has an optional configuration, `Disable Zero Downtime App Deployments` (found in Operations Manager under Pivotal Application Service > Settings > Advanced Features, or via `advanced_features.properties.cloud_controller_temporary_disable_deployments`), that changes the [Active Locks KPI](https://docs.pivotal.io/pivotalcf/2-4/monitoring/kpi.html#ActiveLocks) from `4` to `5`. Healthwatch 1.4 has an alert on this KPI, `locket.ActiveLocks`, that alerts on the value of `4`. If the zero-downtime feature is enabled, use the [Healthwatch API](./api/alerts.html#post) to update the alert configuration from a value of `4` to `5`.
    * The following JSON payload can be sent to the Healthwatch API to make the appropriate update: `"{\"query\":\"origin == 'locket' and name == 'ActiveLocks'\",\"threshold\":{\"critical\":5,\"type\":\"EQUALITY\"}}"`
* The `healthwatch.Diego.AvailableFreeChunksDisk` alert is visible in the Healthwatch UI, but does not get sent to email/Slack/webhook subscribers via PCF Event Alerts. This will be patched in the next release of Healthwatch.
* If an Isolation Segment with Isolated Routing is installed, but no apps are deployed to the Isolation Segment, Healthwatch will alert on `gorouter.ms_since_last_registry_update` with a value of `9223372036.85s`. The alert will recover when an app is pushed to the Isolation Segment.
* In rare circumstances, an Isolation Segment's Capacity stoplight on the Healthwatch Dashboard may be in a warning/yellow state when it should critical/red state.
* Redeploying the BOSH Director (eg, running "Apply Changes" in Operations Manager) while the Healthwatch `bosh-health-check` is executing can result in BOSH losing track of IP addresses that are in use at the IaaS-level.
    * This manifests as the error message `Detected IP conflicts with other VMs on the same networks`.
    * To resolve this issue, orphaned VMs should be deleted at the IaaS-level. 
    * This will be fixed in upcoming Operations Manager patch releases (`2.4.x` and `2.3.x`).
* Some customers have reported intermittent crashes in the `healthwatch-ingestor` and `cf-health-check` apps.
    * This is being actively investigated.
* Windows-based Diego cell instances created via Pivotal Application Service for Windows emit platform metrics with a hard-coded deployment value of `cf`. This can result in the following impacts to capacity values shown by PCF Healthwatch or other consumers of monitoring metrics:
    * If [Isolation Segments](https://docs.pivotal.io/pivotalcf/2-3/adminguide/isolation-segments.html) are used in combination with Isolated Windows-based Diego cells: Any Windows-based cells that are isolated to a given isolation segment are reporting
as part of the core cf system deployment. This means that the isolation segment(s) capacity values will be under-reporting (i.e., only including Linux-based cells and excluding Windows-based cells), and the core cf system deployment will be over-reporting capacity (including Windows-based cells from isolation segments as part of the core cf system capacity).
    * If Isolation Segments are not used: The core CF system deployment will correctly show total capacity, however both Windows-based cells and Linux-based cells will be grouped together in PCF Healthwatch capacity assessments such as capacity remaining and number of free chunks of memory.
* Hides three of the [PAS MySQL KPI](https://docs.pivotal.io/pivotalcf/monitoring/kpi.html#kpi4MySQL) charts. These charts will be available in a future patch version:
    * Query Rate
    * MySQL CPU Busy Time
    * Percentage of Max Connections Used
