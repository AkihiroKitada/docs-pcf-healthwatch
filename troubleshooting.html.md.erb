---
title: Troubleshooting PCF Healthwatch
owner: PCF Healthwatch
---

<strong><%= modified_date %></strong>

This topic describes how to resolve common issues with Pivotal Cloud Foundry (PCF) Healthwatch.

## <a id='insufficient-resources'></a>Insufficient Memory Resources

Insufficient capacity of the Diego cells can cause issues when you install or upgrade PCF Healthwatch.

### Error

If Diego cells do not have sufficient free memory to place the PCF Healthwatch applications then the `push-apps` errand can fail. When this occurs the error message looks similar to the following:

<pre class="terminal">
$ /var/vcap/packages/cf-cli/bin/cf start healthwatch-blue  
Starting app healthwatch-blue in org system / space healthwatch as admin...  
FAILED  
InsufficientResources
</pre>

### Cause

Diego cells do not have enough available resources to place the PCF Healthwatch applications

### Solution

To resolve this issue, navigate to the **Resource Config** pane of the PAS/SRT tile and increase the number of **Diego Cell** instances.  Or, if HA is not desired, scale down the number of instances in the PCF Healthwatch Component Config.

## <a id='memory-limit'></a>Memory Limit Errors

Insufficient memory allocation can cause issues when you install or upgrade PCF Healthwatch.

### Error

If a PCF environment exceeds the total memory limit set for the `healthwatch` space in the `system` org, the PCF Healthwatch `push-apps` errand can fail. When this occurs, the error message looks similar to the following:

<pre class="terminal">
$ /var/vcap/packages/cf-cli/bin/cf start cf-health-check
Starting app cf-health-check in org system / space healthwatch as admin...
FAILED
Server error, status code: 400, error code: 100005, message: You have exceeded your organization's memory limit: app requested more memory than available
</pre>

### Cause

Your PCF environment has an insufficient total memory quota set for the `healthwatch` space in the `system` org.

The issue should not occur if the Apps Manager errand has run in your environment. Because service tiles use the `system` org to execute smoke tests, the Apps Manager errand sets the default `system` org quota to `runaway`. If the Apps Manager errand has not run or failed, the default `system` quota may not be reset properly.

### Solution

To resolve this issue, you can set the default memory quota for the `healthwatch` space in the `system` org to at least 24 GB and re-run the `push-apps` errand manually.

## <a id='opsman-health'></a>Ops Manager Health Check Errors

The Opsmanager Health Check needs the ability to reach Ops Manager on the underlying network.

### Error

This error will appear as constantly failing Ops Manager Health Checks on the Dashboard and `Ops Manager Health Check History` page even though Ops Manager is running.

### Cause

The `opsmanager-health-check` application attempts to connect to Ops Manager in order to verify it is running.  This application needs the correct network settings in order to be able to reach the Ops Manager VM.  If there are firewall rules in place that prevent the network access then this check will continually fail.

### Solution

To resolve this issue, confirm that the `opsmanager-health-check` application is attempting to reach the Ops Manager VM on a URL that is accessible from that instance. To verify this, run `cf ssh opsmanager-health-check` to SSH into the running instance. Then run `curl -k -v $OPSMANAGER_URL` to check the network access.

If you cannot modify network access to allow the `opsmanager-health-check` application to reach Ops Manager, this test cannot be executed and you should disable it. See [Disable Ops Manager Continuous Validation Testing](installing.html#healthwatch-opsman).

## <a id='cli-command-health'></a>CLI Command Health Check Errors

Below are some tips for troubleshooting errors with the CLI Command Health Check.

### Error

The CLI Command Health Check panel on the Healthwatch dashboard shows failures.

### Solution

To troubleshoot these failures, start by getting the logs from the `cf-health-check` app in the `healthwatch` space under the `system` org. Look for JSON log entries where the `status` field does not equal `"SUCCESS"`.

<p class="note"><strong>Note</strong>: The CLI Command Health Check may fail during certain events on the Foundation such as PAS Upgrades or BBR Backups. For more information, please see [cf push Availability During Pivotal Application Service Upgrades](https://docs.pivotal.io/pivotalcf/2-2/customizing/cfpush-availability-during-upgrade.html).</p>


## <a id='bosh-health'></a>BOSH Health Check Failing After Upgrade

### Error

`ERROR: Bosh health check failed to delete deployment "bosh-health-check": Deployment not found` and `bosh-health-check` deployment does exist.

### Cause

In PCF Healthwatch 1.2.2 and subsequent versions, we started using service broker UAA credentials for the BOSH Health Check. This can cause a permissions issue if the BOSH Health Check deployment already exists on the Director.

### Solution

Manually delete the existing BOSH Health Check deployment.


## <a id='bosh-metric-ingestion'></a>Smoke Tests Failing on BOSH Metric Ingestion

### Error

`[Fail] Bosh metric ingestion [It] Ingests metrics from the director into mysql /var/ vcap/packages/healthwatch-data/src/github.com/pivotal-cf/healthwatch-data/data-ingestion/smoketests/bosh_metrics_test.go:50`

<p class="note"><strong>Note</strong>: A symptom of this error is a complete lack of data in the <b>Job Health</b> and <b>Job Vitals</b> panels on the PCF Healthwatch dashboard.</p>

### Cause

The PCF Healthwatch smoke tests errand validates the storage of BOSH system metrics in the PCF Healthwatch database. The errand most often fails because of a bug in earlier versions of Ops Manager that causes the BOSH system metrics forwarder process to fail. This bug is present in Ops Manager versions earlier than v2.0.13 and v2.1.4. 

### Solution

To resolve this issue, upgrade Ops Manager to at least v2.0.13 or v2.1.4, depending on which minor release you use. You can then validate that there are BOSH system metrics in the Firehose by running `cf nozzle -n | grep system`.  This displays metrics such as `system.healthy` and `system.cpu.user` about every 30 seconds.

## <a id='mysql-migration'></a>Healthwatch Failing after Upgrading to v1.2 from v1.1

### Error

`2018-04-26T10:06:54.164-05:00 [APP/PROC/WEB/1] [OUT] Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is org.apache.tomcat.jdbc.pool.PoolExhaustedException: [qtp807752428-1186] Timeout: Pool empty. Unable to fetch a connection in 30 seconds, none available[size:100; busy:0; idle:0; lastwait:30000].`

### Cause

PCF Healthwatch v1.2 uses a single `mysql` node. This differs from the clustered version of MySQL used in v1.1, which sent all database traffic through `proxy` nodes. If the product upgrades with the `push-apps` errand  disabled, the component apps of PCF Healthwatch do not update and establish a connection the single `mysql` node.

### Solution

Run the `push-apps` errand in PCF Healthwatch.
