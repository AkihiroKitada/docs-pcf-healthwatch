---
title: Healthwatch Metrics
owner: Healthwatch
---

This topic lists the metrics created by Healthwatch,
including Tanzu Application Service Exporter and Enterprise PKS Exporter.

<p class="note"><strong>Note</strong>: For external monitoring consumers,
  Healthwatch expose the metrics that it creates through Prometheus style metrics endpoints.
  You can retrieve these metrics by querying the metrics endpoints.
  The metrics endpoints are secured by mTLS certs generated using Ops Manager CA cert.
</p>

## <a id='sli'></a>Platform Service Level Indicators

Healthwatch generates metrics that directly indicate the health of several platform components.
You can use these metrics with service level objectives to calculate percent availability and error budgets.

### <a id='cf-cli'></a>Cloud Foundry CLI Health

The Cloud Foundry Command Line Interface (cf CLI) enables developers to create and manage apps on Tanzu Application Service. Healthwatch executes a continuous test suite for validating the core functions of the cf CLI.

The table below provides information about the cf CLI health smoke tests and the metrics that are generated for these tests.

<table class="nice">
<tr>
  <th>Test</th>
  <th>Metric</th>
  <th>Frequency</th>
  <th>Description</th>
</tr>
<tr>
  <td>Total test runs</td>
  <td><code>pas_sli_runs_total</code></td>
  <td>5 min</td>
  <td>Number of times the test suite runs since the process starts.</td>
</tr>
<tr>
  <td>Total test fails</td>
  <td><code>pas_sli_failures_total</code></td>
  <td>5 min</td>
  <td>Number of times the test suite fails since the process starts. The test suite fails if any of the task fails.</td>
</tr>
<tr>
  <td>Total cf login fails</td>
  <td><code>pas_sli_task_failures_total{task="login"}</code></td>
  <td>5 min</td>
  <td>Number of times login fails since the process starts.</td>
</tr>
<tr>
  <td>Total cf push fails</td>
  <td><code>pas_sli_task_failures_total{task="push"}</code></td>
  <td>5 min</td>
  <td>Number of times push fails since the process starts.</td>
</tr>
<tr>
  <td>Total cf set-env fails</td>
  <td><code>pas_sli_task_failures_total{task="setEnv"}</code></td>
  <td>5 min</td>
  <td>Number of times set-env fails since the process starts.</td>
</tr>
<tr>
  <td>Total cf start fails</td>
  <td><code>pas_sli_task_failures_total{task="start"}</code></td>
  <td>5 min</td>
  <td>Number of times start fails since the process starts.</td>
</tr>
<tr>
  <td>Total cf logs fails</td>
  <td><code>pas_sli_task_failures_total{task="logs"}</code></td>
  <td>5 min</td>
  <td>Number of times logs fails since the process starts.</td>
</tr>
<tr>
  <td>Total cf stop fails</td>
  <td><code>pas_sli_task_failures_total{task="stop"}</code></td>
  <td>5 min</td>
  <td>Number of times stop fails since the process starts.</td>
</tr>
<tr>
  <td>Total cf delete fails</td>
  <td><code>pas_sli_task_failures_total{task="delete"}</code></td>
  <td>5 min</td>
  <td>Number of times delete fails since the process starts.</td>
</tr>
<tr>
  <td>Test app push time</td>
  <td><code>pas_sli_task_run_duration_seconds{task="push"}</code></td>
  <td>5 min</td>
  <td>Time in seconds</td>
</tr>
<tr>
  <td>Overall smoke test run time</td>
  <td><code>pas_sli_run_duration_seconds</code></td>
  <td>5 min</td>
  <td>Time in seconds</td>
</tr>
</table>


### <a id='pks-cli'></a>PKS CLI Health

The PKS Command Line Interface (pks CLI) enables to create and manage
Kubernetes clusters. Healthwatch executes a continuous test suite
for validating the core functions of the pks CLI.

The table below provides information about the
pks CLI health smoke tests and the metrics that are generated for these tests.

<table class="nice">
<tr>
  <th>Test</th>
  <th>Metric</th>
  <th>Frequency</th>
  <th>Description</th>
</tr>
<tr>
  <td>Total test runs</td>
  <td><code>pks_sli_runs_total</code></td>
  <td>1 min</td>
  <td>Number of times the test suite runs since the process starts.</td>
</tr>
<tr>
  <td>Total test fails</td>
  <td><code>pks_sli_failures_total</code></td>
  <td>1 min</td>
  <td>Number of times the test suite fails since the process starts. The test suite fails if any of the task fails.</td>
</tr>
<tr>
  <td>Total pks login fails</td>
  <td><code>pks_sli_task_failures_total{task="login"}</code></td>
  <td>1 min</td>
  <td>Number of times login fails since the process starts.</td>
</tr>
<tr>
  <td>Total pks clusters fails</td>
  <td><code>pks_sli_task_failures_total{task="list"}</code></td>
  <td>1 min</td>
  <td>Number of times list clusters fails since the process starts.</td>
</tr>
<tr>
  <td>Total pks get-credentials fails</td>
  <td><code>pks_sli_task_failures_total{task="get-credentials"}</code></td>
  <td>1 min</td>
  <td>Number of times get-credentials fails since the process starts. If there is no cluster created on the foundation,
  this metric will report success without actually executing get-credentials command.</td>
</tr>
<tr>
  <td>Total pks plans fails</td>
  <td><code>pks_sli_task_failures_total{task="plans"}</code></td>
  <td>1 min</td>
  <td>Number of times list plans fails since the process starts.</td>
</tr>
<tr>
  <td>Number of clusters</td>
  <td><code>pks_sli_number_of_clusters</code></td>
  <td>1 min</td>
  <td>Number of Kubernetes clusters managed by PKS broker.</td>
</tr>
<tr>
  <td>Get-credentials response time</td>
  <td><code>pks_sli_task_run_duration_seconds{task="get-credentials"}</code></td>
  <td>1 min</td>
  <td>Time in seconds</td>
</tr>
<tr>
  <td>Overall smoke test run time</td>
  <td><code>pks_sli_run_duration_seconds</code></td>
  <td>1 min</td>
  <td>Time in seconds</td>
</tr>
</table>


### <a id='bosh-health'></a>BOSH Health

BOSH is the technology behind Ops Manager to manage the
VMs deployed. If the BOSH Director is not responsive and functional, BOSH-managed VMs lose their resiliency. Healthwatch executes a continuous test suite
for validating the functionality of BOSH director.

The table below provides information about the metrics that are generated.

<table class="nice">
<tr>
  <th>Test</th>
  <th>Metric</th>
  <th>Frequency</th>
  <th>Description</th>
</tr>
<tr>
  <td>Total test runs</td>
  <td><code>bosh_sli_runs_total</code></td>
  <td>5 min</td>
  <td>Number of times the test suite runs since the process starts.</td>
</tr>
<tr>
  <td>Total test fails</td>
  <td><code>bosh_sli_failures_total</code></td>
  <td>5 min</td>
  <td>Number of times the test suite fails since the process starts. The test suite fails if any of the task fails.</td>
</tr>
<tr>
  <td>Total bosh deployments fails</td>
  <td><code>bosh_sli_task_failures_total{task="deployments"}</code></td>
  <td>5 min</td>
  <td>Number of times list deployments fails since the process starts.</td>
</tr>
<tr>
  <td>Total bosh deploy fails</td>
  <td><code>bosh_sli_task_failures_total{task="deploy"}</code></td>
  <td>5 min</td>
  <td>Number of times deploy fails since the process starts.</td>
</tr>
<tr>
  <td>Total bosh delete fails</td>
  <td><code>bosh_sli_task_failures_total{task="delete"}</code></td>
  <td>5 min</td>
  <td>Number of times delete deployment fails since the process starts.</td>
</tr>
<tr>
  <td>Total bosh tasks fails</td>
  <td><code>bosh_sli_task_failures_total{task="tasks"}</code></td>
  <td>5 min</td>
  <td>Number of times list running tasks fails since the process starts.</td>
</tr>
<tr>
  <td>BOSH task running</td>
  <td><code>bosh_deployments_status</code></td>
  <td>5 min</td>
  <td><code>1</code> = running or <code>0</code> = idle. If bosh tasks fails, this metric will report <code>0</code>.</td>
</tr>
<tr>
  <td>Overall smoke test run time</td>
  <td><code>bosh_sli_run_duration_seconds</code></td>
  <td>5 min</td>
  <td>Time in seconds</td>
</tr>
</table>

<p class="note"><strong>Note</strong>: Healthwatch deploys and deletes a VM named <code>bosh-health-exporter</code> as part of this test suite.</p>


### <a id='cert-expiration'></a>Certificate Expiration Monitoring

Healthwatch exposes certificate duration to expiration metrics. More information see [here](common-configurations/certificate-monitoring.html).

The table below provides information about the metrics that are generated.

<table class="nice">
<tr>
  <th>Test</th>
  <th>Metric</th>
  <th>Frequency</th>
  <th>Description</th>
</tr>
<tr>
  <td>Certificate time to expire</td>
  <td><code>ssl_certificate_expiry_seconds{exported_instance=~".*"}</code></td>
  <td>1 min</td>
  <td>How long in seconds until certain certificate(s) expire.</td>
</tr>
</table>


### <a id='blackbox'></a>Canary URL Health

App availability and responsiveness issues can significantly impact the experience of end users.
Healthwatch allows operators to configure Canary URLs in the tile and expose whether the URL is running or not,
along with the response time metrics.

<table class="nice">
<tr>
  <th>Test</th>
  <th>Metric</th>
  <th>Frequency</th>
  <th>Description</th>
</tr>
<tr>
  <td>URL test success</td>
  <td><code>probe_success{instance=~".*"}</code></td>
  <td>15 s</td>
  <td><code>1</code> = pass or <code>0</code> = fail</td>
</tr>
<tr>
  <td>URL response time</td>
  <td><code>probe_duration_seconds</code></td>
  <td>15 s</td>
  <td>Time in seconds</td>
</tr>
</table>

