---
title: Healthwatch Metrics
owner: Healthwatch
---

This topic lists the metrics created by Healthwatch,
including Tanzu Application Service Exporter and Enterprise PKS Exporter.

<p class="note"><strong>Note</strong>: For external monitoring consumers,
  Healthwatch exposes the metrics that it creates through scrapable metrics endpoints.
  The metrics endpoints are secured by mTLS certs generated using Ops Manager CA cert.
</p>

## <a id='sli'></a>Platform Service Level Indicators

Healthwatch generates metrics that describe the health of several platform components.
These metrics can be used to calculate percent availability and error budgets.

### SLI Tests

We have a generic underlying component in our code called the `SLITestRunner`
which can be configured to run tasks that will provide Service Level Indicators
for command line applications and processes. Thus, you will see a pattern emerge
between certain metrics (`bosh_sli_...`, `pas_sli_...`, `pks_sli_...`).

| Metric                                                  | Description                                                                                                                      |
|---------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------|
| `COMPONENT_deployments_status`                          | Bosh Deployments status, a 1 indicates a deployment is occurring on the director                                                 |
| `COMPONENT_sli_duration_seconds_bucket`                 | Number of seconds it took for the SLI test suite to run, grouped by duration                                                     |
| `COMPONENT_sli_duration_seconds_count`                  | Total number of metrics in all the buckets                                                                                       |
| `COMPONENT_sli_duration_seconds_sum`                    | Total value of the metrics in all the buckets                                                                                    |
| `COMPONENT_sli_exporter_status`                         | Exporter status, a 1 indicates the exporter is running and healthy                                                               |
| `COMPONENT_sli_failures_total`                          | Total number of failures of the SLI test suite                                                                                   |
| `COMPONENT_sli_run_duration_seconds`                    | Number of seconds it took for the SLI test suite to run                                                                          |
| `COMPONENT_sli_runs_total`                              | Total number of runs of the SLI test suite. Use bosh_sli_failures_total / bosh_sli_runs_total to get failure rate.               |
| `COMPONENT_sli_task_duration_seconds_bucket`            | Number of seconds it took for a particular task to run, grouped by duration                                                      |
| `COMPONENT_sli_task_duration_seconds_count`             | Total number of metrics in all the buckets                                                                                       |
| `COMPONENT_sli_task_duration_seconds_sum`               | Total value of the metrics in all the buckets                                                                                    |                                                                            |
| `COMPONENT_sli_task_run_duration_seconds`               | Number of seconds it took for a particular task to run                                                                           |
| `COMPONENT_sli_task_runs_total`                         | Total number of runs for a particular SLI task. Use bosh_sli_task_failures_total / bosh_sli_task_runs_total to get failure rate. |

Where `COMPONENT` is the platform or CLI tested (e.g. `bosh`, `pas`, `pks`).

### <a id='cf-cli'></a>Cloud Foundry CLI Health

The Cloud Foundry Command Line Interface (`cf` CLI) enables developers to create and manage apps on Tanzu Application Service. Healthwatch executes a continuous test suite to validate the core functions of the `cf` CLI.

The table below provides information about the `cf` CLI health smoke tests and the metrics that are generated for these tests.

| Metric                                       | Description                                                |
|----------------------------------------------|------------------------------------------------------------|
| `pas_sli_task_failures_total{task="delete"}` | Total number of failures for a `cf delete` command on PAS  |
| `pas_sli_task_failures_total{task="login"}`  | Total number of failures for a `cf login` command on PAS   |
| `pas_sli_task_failures_total{task="logs"}`   | Total number of failures for a `cf logs` command on PAS    |
| `pas_sli_task_failures_total{task="push"}`   | Total number of failures for a `cf push` command on PAS    |
| `pas_sli_task_failures_total{task="setEnv"}` | Total number of failures for a `cf set-env` command on PAS |
| `pas_sli_task_failures_total{task="start"}`  | Total number of failures for a `cf start` command on PAS   |
| `pas_sli_task_failures_total{task="stop"}`   | Total number of failures for a `cf stop` command on PAS    |

### PAS

healthwatch_pasExporter_counterConversion_seconds
healthwatch_pasExporter_evictedMetrics
healthwatch_pasExporter_gaugeConversion_seconds
healthwatch_pasExporter_ingressLatency_seconds
healthwatch_pasExporter_ingress_envelopes
healthwatch_pasExporter_status


<p class="note"><strong>Note</strong>: The Cloud Foundry CLI health checks each have a timeout of 2 minutes (default value).</p>

### <a id='pks-cli'></a>PKS CLI Health

The PKS Command Line Interface (PKS CLI) allows the operator to create and manage
Kubernetes clusters. Healthwatch executes a continuous test suite
to validate the core functions of the PKS CLI.

The table below provides information about the
PKS CLI Health smoke tests and the metrics that are generated for these tests.

| Metric                                                | Description                                                  |
|-------------------------------------------------------|--------------------------------------------------------------|
| `pks_sli_task_failures_total{task="clusters"}`        | Total number of failures for a `pks clusters` command        |
| `pks_sli_task_failures_total{task="get-credentials"}` | Total number of failures for a `pks get-credentials` command |
| `pks_sli_task_failures_total{task="login"}`           | Total number of failures for a `pks login` command           |
| `pks_sli_task_failures_total{task="plans"}`           | Total number of failures for a `pks plans` command           |

### <a id='bosh-health'></a>BOSH Health

BOSH is the technology behind Ops Manager to manage the
VMs deployed. If the BOSH Director is not responsive or functional, BOSH-managed VMs lose their resiliency. Healthwatch executes a continuous test suite
to validate the functionality of BOSH director.

The table below provides information about the metrics that are generated.

<p class="note"><strong>Note</strong>: Healthwatch deploys and deletes a VM named <code>bosh-health-exporter</code> as part of this test suite.</p>

| Metric                                                     | Description                                                                                   |
|------------------------------------------------------------|-----------------------------------------------------------------------------------------------|
| `bosh_deployments_status`                                  | Bosh Deployments status, a 1 indicates a deployment is occurring on the director              |
| `bosh_sli_task_failures_total{task="delete"}`              | Total number of failures for `bosh delete` command                                            |
| `bosh_sli_task_failures_total{task="deploy"}`              | Total number of failures for `bosh deploy` command                                            |
| `bosh_sli_task_failures_total{task="deployments"}`         | Total number of failures for `bosh deployments` command                                       |
| `bosh_sli_task_failures_total{task="tasks"}`               | Total number of failures for `bosh tasks` command                                             |
| `healthwatch_boshExporter_ingressLatency_seconds_bucket`   | Number of seconds it took to process a batch of Loggregator envelopes, grouped by latency     |
| `healthwatch_boshExporter_ingressLatency_seconds_count`    | Total number of metrics in all the buckets                                                    |
| `healthwatch_boshExporter_ingressLatency_seconds_sum`      | Total value of the metrics in all the buckets                                                 |
| `healthwatch_boshExporter_ingress_envelopes`               | Number of envelopes received by observability metrics agent                                   |
| `healthwatch_boshExporter_metricConversion_seconds_bucket` | Number of seconds it took to convert a bosh metric to a Prometheus gauge, grouped by duration |
| `healthwatch_boshExporter_metricConversion_seconds_count`  | Total number of metrics in all the buckets                                                    |
| `healthwatch_boshExporter_metricConversion_seconds_sum`    | Total value of the metrics in all the buckets                                                 |
| `healthwatch_boshExporter_status`                          | Exporter status, a 1 indicates the exporter is running and healthy                            |


### <a id='cert-expiration'></a>Certificate Expiration Monitoring

Healthwatch exposes metrics about the expiration of certificates. For more information, see [here](common-configurations/certificate-monitoring.html).

The table below provides information about the metrics that are generated.

<table class="nice">
<tr>
  <th>Test</th>
  <th>Metric</th>
  <th>Frequency</th>
  <th>Description</th>
</tr>
<tr>
  <td>Certificate time to expire</td>
  <td><code>ssl_certificate_expiry_seconds{exported_instance=~".*"}</code></td>
  <td>1 min</td>
  <td>How long in seconds until certain certificate(s) expire.</td>
</tr>
</table>


probe_http_ssl
probe_ssl_earliest_cert_expiry
probe_ssl_last_chain_expiry_timestamp_seconds
ssl_certificate_expiry_seconds{exported_instance=~".*"}


### <a id='blackbox'></a>Canary URL Health

App availability and responsiveness issues can significantly impact the experience of end users.
Healthwatch allows operators to configure Canary URLs in the tile and expose whether the URL is running or not,
along with the response time metrics.

| Metric                                          | Description                                                                        |
|-------------------------------------------------|------------------------------------------------------------------------------------|
| `probe_dns_additional_rrs`                      | Returns number of entries in the additional resource record list                   |
| `probe_dns_answer_rrs`                          | Returns number of entries in the answer resource record list                       |
| `probe_dns_authority_rrs`                       | Returns number of entries in the authority resource record list                    |
| `probe_dns_duration_seconds`                    | Duration of DNS request by phase                                                   |
| `probe_dns_lookup_time_seconds`                 | Returns the time taken for probe dns lookup in seconds                             |
| `probe_dns_serial`                              | Returns the serial number of the zone                                              |
| `probe_duration_seconds`                        | Returns how long the probe took to complete in seconds                             |
| `probe_failed_due_to_regex`                     | Indicates if probe failed due to regex                                             |
| `probe_http_content_length`                     | Length of http content response                                                    |
| `probe_http_duration_seconds`                   | Duration of http request by phase, summed over all redirects                       |
| `probe_http_last_modified_timestamp_seconds`    | Returns the Last-Modified HTTP response header in unixtime                         |
| `probe_http_redirects`                          | The number of redirects                                                            |
| `probe_http_ssl`                                | Indicates if SSL was used for the final redirect                                   |
| `probe_http_status_code`                        | Response HTTP status code                                                          |
| `probe_http_uncompressed_body_length`           | Length of uncompressed response body                                               |
| `probe_http_version`                            | Returns the version of HTTP of the probe response                                  |
| `probe_icmp_duration_seconds`                   | Duration of icmp request by phase                                                  |
| `probe_icmp_reply_hop_limit`                    | Replied packet hop limit (TTL for ipv4)                                            |
| `probe_ip_addr_hash`                            | Specifies the hash of IP address. It's useful to detect if the IP address changes. |
| `probe_ip_protocol`                             | Specifies whether probe ip protocol is IP4 or IP6                                  |
| `probe_ssl_earliest_cert_expiry`                | Returns earliest SSL cert expiry in unixtime                                       |
| `probe_ssl_last_chain_expiry_timestamp_seconds` | Returns last SSL chain expiry in unixtime                                          |
| `probe_ssl_last_chain_info`                     | Contains SSL leaf certificate information                                          |
| `probe_success`                                 | Displays whether or not the probe was a success                                    |
| `probe_tls_version_info`                        | Returns the TLS version used, or NaN when unknown                                  |

### Prometheus Exposition

healthwatch_prometheusExpositionLatency_seconds
healthwatch_prometheusExposition_expiredMetrics
healthwatch_prometheusExposition_histogramMapConversion
healthwatch_prometheusExposition_metricMapConversion
healthwatch_prometheusExposition_metricSorting



### SVM Forwarder

failed_scrapes_total
last_total_attempted_scrapes
last_total_failed_scrapes
last_total_scrape_duration
scrape_targets_total


### SVMs

The following metrics are Healthwatch 1.x metrics
that are still available for use by turning on the SVM Forwarder.
See the [Release Notes](./release-notes.html#2-0-1) for more information.

Diego_AvailableFreeChunksDisk
Diego_AvailableFreeChunks
Diego_LRPsAdded_1H
Diego_TotalAvailableContainerCapacity_5M
Diego_TotalPercentageAvailableDiskCapacity_5M
Diego_TotalAvailableMemoryCapacity_5M
Diego_TotalPercentageAvailableContainerCapacity_5M
Diego_TotalAvailableDiskCapacity_5M
Doppler_MessagesAverage_1M
Firehose_LossRate_1H
Firehose_LossRate_1M
SyslogDrain_RLP_LossRate_1M
SyslogAgent_LossRate_1M
uaa_throughput_rate
Diego_TotalPercentageAvailableMemoryCapacity_5M
health_check_CanaryApp_available
health_check_CanaryApp_responseTime
health_check_bosh_director_success                       | BOSH SLI test status, 1 indicates success
health_check_cliCommand_login
health_check_cliCommand_push
health_check_cliCommand_pushTime
health_check_cliCommand_start
health_check_cliCommand_logs
health_check_cliCommand_stop
health_check_cliCommand_delete
health_check_cliCommand_probe_count
health_check_cliCommand_success
bosh_deployment